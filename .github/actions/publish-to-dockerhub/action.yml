name: publish-to-dockerhub

description: "Retag and publish image to Docker Hub"

inputs:
  tag:
    required: true
    description: "Image tag"
  username:
    required: true
    description: "Docker Hub username"
  password:
    required: true
    description: "Docker Hub password"

runs:
  using: composite
  steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Push images to Docker Hub
      env:
        tag: "${{ inputs.tag }}"
        DOCKER_CLI_EXPERIMENTAL: enabled
        docker_repository: "${{ inputs.username }}/devcontainers"
      shell: bash
      run: |
        from=ghcr.io/${{github.repository}}:${tag};
        name=docker.io/${docker_repository}:${tag};

        # Remove all images to conserve disk space
        docker rmi $(docker image ls -aq) || true;
        docker manifest rm ${name} || true;
        docker system prune -f;

        for arch in amd64 arm64; do
          # Pull each image locally
          docker pull --platform linux/${arch} ${from};
          # Retag from ghcr.io to docker.io and add -${arch} suffix
          docker image tag ${from} ${name}-${arch};
          # Push platform-specific docker.io image
          docker push ${name}-${arch};
          # Create multiarch manifest and add the retagged image
          docker manifest create ${name} --amend ${name}-${arch};
          # Annotate that this image is the ${arch} version
          docker manifest annotate ${name} ${name}-${arch} --arch ${arch};
          # Remove all images to conserve disk space
          docker rmi ${from} ${name}-${arch} || true;
          docker system prune -f;
        done;

        # Push the multiarch manifest
        docker manifest push ${name};
