name: Publish images

on:
  pull_request:
  workflow_dispatch:

jobs:
  publish-images:
    name: Publish image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        ARCH: ["amd64", "arm64"]
        CUDA: ["", "11.8", "12.0"]
        LLVM: ["", "13", "14", "15", "dev"]
        NVHPC: ["", "22.11"]
        MAMBA: ["", "mambaforge"]
    steps:
      - name: Checkout stdexec
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Check repo name
        shell: bash
        env:
          CUDA: "${{ matrix.CUDA }}"
          LLVM: "${{ matrix.LLVM }}"
          NVHPC: "${{ matrix.NVHPC }}"
          MAMBA: "${{ matrix.MAMBA }}"
        run: |
          cuda=${CUDA:+"-cuda"}
          llvm=${LLVM:+"-llvm"}
          nvhpc=${NVHPC:+"-nvhpc"}
          mamba=${MAMBA:+"-mambaforge"}
          repo="cmake-ninja-sccache${llvm}${cuda}${mamba}${nvhpc}"

          if [[ ! -d "src/${repo}" ]]; then
            echo "build_image=0" >> $GITHUB_ENV;
            exit 0;
          fi

          echo "build_image=1" >> $GITHUB_ENV;

          cuda=${CUDA:+"${CUDA}-"}
          llvm=${LLVM:+"${LLVM}-"}
          nvhpc=${NVHPC:+"${NVHPC}-"}
          tag="${llvm}${cuda}${nvhpc}"

          echo "tag=$tag" >> $GITHUB_ENV;
          echo "repo=$repo" >> $GITHUB_ENV;

      - name: Build image
        if: env.build_image == '1'
        shell: bash
        run: |
          sed -i -re \
            's@features/cuda(:[0-9]+)": \{\}@features/cuda\1": \{"cudaVersion": "${{ matrix.CUDA }}"\}@' \
            ./src/${repo}/.devcontainer/devcontainer.json;
          sed -i -re \
            's@features/llvm(:[0-9]+)": \{\}@features/llvm\1": \{"llvmVersion": "${{ matrix.LLVM }}"\}@' \
            ./src/${repo}/.devcontainer/devcontainer.json;
          sed -i -re \
            's@features/nvhpc(:[0-9]+)": \{\}@features/nvhpc\1": \{"nvhpcVersion": "${{ matrix.NVHPC }}"\}@' \
            ./src/${repo}/.devcontainer/devcontainer.json;

          echo "image name: ${repo}:${tag}${{ matrix.ARCH }}";
          echo "devcontainer.json:";
          cat ./src/${repo}/.devcontainer/devcontainer.json;
